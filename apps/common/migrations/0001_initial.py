# Generated by Django 4.2.9 on 2024-06-01 06:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=255)),
                ('st_id', models.CharField(blank=True, max_length=50, null=True)),
                ('text_data', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DPU',
            fields=[
                ('dpu_user', models.IntegerField()),
                ('zone', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('st_id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('society', models.CharField(max_length=255)),
                ('mobile_number', models.CharField(max_length=15, unique=True)),
                ('owner', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('deactivated', 'Deactivated')], default='active', max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('plain_password', models.CharField(max_length=100)),
                ('select_dpu', models.CharField(choices=[('DPMCU', 'DPMCU'), ('BMC', 'BMC')], default='DPMCU', max_length=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DREC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REC_TYPE', models.IntegerField(choices=[(1, 'FAT/SNF/CLR Record'), (2, 'Edited FAT/SNF/CLR Data'), (3, 'Local Sell'), (4, 'Edited Local Sell'), (5, 'Dan'), (6, 'Edited Dan'), (7, 'Deduction')], default=1)),
                ('SLIP_TYPE', models.IntegerField(default=None, null=True)),
                ('CUST_ID', models.IntegerField(default=None, null=True)),
                ('TotalFileRecord', models.IntegerField(default=None, null=True)),
                ('FlagEdited', models.CharField(blank=True, default='', max_length=255)),
                ('MType', models.CharField(default=None, max_length=255, null=True)),
                ('RecordingDate', models.DateField(default=None, null=True)),
                ('RecordingTime', models.CharField(default='0000', max_length=255)),
                ('SHIFT', models.CharField(default=None, max_length=255, null=True)),
                ('FAT', models.FloatField(default=None, null=True)),
                ('FAT_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('SNF', models.FloatField(default=None, null=True)),
                ('SNF_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('CLR', models.FloatField(default=None, null=True)),
                ('CLR_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('WATER', models.FloatField(default=None, null=True)),
                ('WATER_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('QT', models.FloatField(default=None, null=True)),
                ('QT_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('RATE', models.FloatField(default=None, null=True)),
                ('Amount', models.FloatField(default=None, null=True)),
                ('CAmount', models.FloatField(default=None, null=True)),
                ('CSR_NO', models.IntegerField(default=None, null=True)),
                ('CREV', models.IntegerField(default=None, null=True)),
                ('END_TAG', models.CharField(blank=True, default='', max_length=255)),
                ('dpuid', models.CharField(blank=True, default='', max_length=255)),
                ('RID', models.CharField(default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ST_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drecs', to='common.dpu')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RateTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal_type', models.CharField(max_length=100)),
                ('rate_type', models.CharField(max_length=100)),
                ('csv_file', models.FileField(upload_to='rate_tables/')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('admin_comment', models.CharField(default='Nothing', max_length=200)),
                ('asked_date', models.DateField(auto_now=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('st_id', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OldDrecDataEdited',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REC_TYPE', models.IntegerField()),
                ('SLIP_TYPE', models.IntegerField(default=None, null=True)),
                ('ST_ID', models.CharField(max_length=255)),
                ('CUST_ID', models.IntegerField(default=None, null=True)),
                ('TotalFileRecord', models.IntegerField(default=None, null=True)),
                ('FlagEdited', models.CharField(blank=True, default='', max_length=255)),
                ('MType', models.CharField(default=None, max_length=255, null=True)),
                ('RecordingDate', models.DateField(default=None, null=True)),
                ('RecordingTime', models.CharField(default='0000', max_length=255)),
                ('SHIFT', models.CharField(default=None, max_length=255, null=True)),
                ('FAT', models.FloatField(default=None, null=True)),
                ('FAT_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('SNF', models.FloatField(default=None, null=True)),
                ('SNF_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('CLR', models.FloatField(default=None, null=True)),
                ('CLR_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('WATER', models.FloatField(default=None, null=True)),
                ('WATER_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('QT', models.FloatField(default=None, null=True)),
                ('QT_UNIT', models.CharField(blank=True, default='', max_length=255)),
                ('RATE', models.FloatField(default=None, null=True)),
                ('Amount', models.FloatField(default=None, null=True)),
                ('CAmount', models.FloatField(default=None, null=True)),
                ('CSR_NO', models.IntegerField(default=None, null=True)),
                ('CREV', models.IntegerField(default=None, null=True)),
                ('END_TAG', models.CharField(blank=True, default='', max_length=255)),
                ('dpuid', models.CharField(blank=True, default='', max_length=255)),
                ('RID', models.CharField(default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('original_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edited_records', to='common.drec')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('st_id', models.CharField(max_length=20)),
                ('cust_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=15)),
                ('adhaar', models.CharField(max_length=20)),
                ('bank_ac', models.CharField(max_length=30)),
                ('ifsc', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('csv_file', models.FileField(upload_to='csv_files/')),
                ('date_uploaded', models.DateTimeField(auto_now=True)),
                ('st_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='common.dpu')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='common_cust_user_id_b22302_idx'), models.Index(fields=['st_id'], name='common_cust_st_id_i_c76edb_idx')],
            },
        ),
    ]
